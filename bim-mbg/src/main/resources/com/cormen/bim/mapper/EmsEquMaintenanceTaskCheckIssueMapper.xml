<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cormen.bim.mapper.EmsEquMaintenanceTaskCheckIssueMapper">
  <resultMap id="BaseResultMap" type="com.cormen.bim.model.EmsEquMaintenanceTaskCheckIssue">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="TASK_ID" jdbcType="INTEGER" property="taskId" />
    <result column="ISSUE" jdbcType="VARCHAR" property="issue" />
    <result column="STATE" jdbcType="VARCHAR" property="state" />
    <result column="SOLUTION" jdbcType="VARCHAR" property="solution" />
    <result column="CREATED_BY" jdbcType="BIGINT" property="createdBy" />
    <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="UPDATED_BY" jdbcType="BIGINT" property="updatedBy" />
    <result column="UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, TASK_ID, ISSUE, STATE, SOLUTION, CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME
  </sql>
  <select id="selectByExample" parameterType="com.cormen.bim.model.EmsEquMaintenanceTaskCheckIssueExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ems_equ_maintenance_task_check_issue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ems_equ_maintenance_task_check_issue
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ems_equ_maintenance_task_check_issue
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cormen.bim.model.EmsEquMaintenanceTaskCheckIssueExample">
    delete from ems_equ_maintenance_task_check_issue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cormen.bim.model.EmsEquMaintenanceTaskCheckIssue">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ems_equ_maintenance_task_check_issue (TASK_ID, ISSUE, STATE, 
      SOLUTION, CREATED_BY, CREATED_TIME, 
      UPDATED_BY, UPDATED_TIME)
    values (#{taskId,jdbcType=INTEGER}, #{issue,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{solution,jdbcType=VARCHAR}, #{createdBy,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=BIGINT}, #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cormen.bim.model.EmsEquMaintenanceTaskCheckIssue">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ems_equ_maintenance_task_check_issue
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        TASK_ID,
      </if>
      <if test="issue != null">
        ISSUE,
      </if>
      <if test="state != null">
        STATE,
      </if>
      <if test="solution != null">
        SOLUTION,
      </if>
      <if test="createdBy != null">
        CREATED_BY,
      </if>
      <if test="createdTime != null">
        CREATED_TIME,
      </if>
      <if test="updatedBy != null">
        UPDATED_BY,
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="issue != null">
        #{issue,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="solution != null">
        #{solution,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cormen.bim.model.EmsEquMaintenanceTaskCheckIssueExample" resultType="java.lang.Long">
    select count(*) from ems_equ_maintenance_task_check_issue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ems_equ_maintenance_task_check_issue
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.taskId != null">
        TASK_ID = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.issue != null">
        ISSUE = #{record.issue,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        STATE = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.solution != null">
        SOLUTION = #{record.solution,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        CREATED_BY = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.createdTime != null">
        CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        UPDATED_BY = #{record.updatedBy,jdbcType=BIGINT},
      </if>
      <if test="record.updatedTime != null">
        UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ems_equ_maintenance_task_check_issue
    set ID = #{record.id,jdbcType=INTEGER},
      TASK_ID = #{record.taskId,jdbcType=INTEGER},
      ISSUE = #{record.issue,jdbcType=VARCHAR},
      STATE = #{record.state,jdbcType=VARCHAR},
      SOLUTION = #{record.solution,jdbcType=VARCHAR},
      CREATED_BY = #{record.createdBy,jdbcType=BIGINT},
      CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      UPDATED_BY = #{record.updatedBy,jdbcType=BIGINT},
      UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cormen.bim.model.EmsEquMaintenanceTaskCheckIssue">
    update ems_equ_maintenance_task_check_issue
    <set>
      <if test="taskId != null">
        TASK_ID = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="issue != null">
        ISSUE = #{issue,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="solution != null">
        SOLUTION = #{solution,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        CREATED_BY = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        UPDATED_BY = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cormen.bim.model.EmsEquMaintenanceTaskCheckIssue">
    update ems_equ_maintenance_task_check_issue
    set TASK_ID = #{taskId,jdbcType=INTEGER},
      ISSUE = #{issue,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=VARCHAR},
      SOLUTION = #{solution,jdbcType=VARCHAR},
      CREATED_BY = #{createdBy,jdbcType=BIGINT},
      CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      UPDATED_BY = #{updatedBy,jdbcType=BIGINT},
      UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>